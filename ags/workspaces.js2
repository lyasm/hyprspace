console.log('Test');
import Widget from 'resource:///com/github/Aylur/ags/widget.js';
import Hyprland from 'resource:///com/github/Aylur/ags/service/hyprland.js';
import { range } from './utils.js';
import { exec, execAsync } from 'resource:///com/github/Aylur/ags/utils.js';
import * as Utils from 'resource:///com/github/Aylur/ags/utils.js';

const dispatch = ws => Utils.execAsync(`hyprctl dispatch workspace ${ws}`)

// export default () => Widget.Box({
//     className: 'workspaces',
//     connections: [[Hyprland.active.workspace, self => {
//         const uniqueWorkspaces = [];
//         Hyprland.workspaces.forEach(workspace => {
//             if (!uniqueWorkspaces.includes(workspace.name)) {
//                 uniqueWorkspaces.push(workspace.name);
//             }
//         });
// 	    uniqueWorkspaces.sort();

// 		self.children = uniqueWorkspaces.map(workspaceName => {
// 			const isFocused = Hyprland.active.workspace.name === workspaceName;
// 			return Widget.Overlay({
// 				child: Widget.Label({ label: ` `, xalign: 0.5, className: isFocused ? 'bg-focused' : 'bg-ws'}),
// 				overlays:[
// 				Widget.Button({
// 					onClicked: () => {
// 						const foundWorkspace = Hyprland.workspaces.find(workspace => workspace.name === workspaceName);
// 						if (foundWorkspace) {
// 							execAsync(`hyprctl dispatch workspace ${foundWorkspace.id}`);
// 						}
// 					},
// 					child: Widget.Label({ label: `${workspaceName}`, xalign: 0.5 }),
// 					className: isFocused ? 'focused' : '',
// 				}),
// 				Widget.Box({ className: isFocused ? 'orbiter' : 'nu' }),
// 				],
// 				pass_through: true,
// 			});
// 		});

// 		//dont del!
//     }
// 				   ]]
// });

export default () => Widget.Box({
    className: 'workspaces',
    connections: [[Hyprland.active.workspace, self => {
        // generate an array [1..10] then make buttons from the index
        const arr = Array.from({ length: 10 }, (_, i) => i + 1);
        self.children = arr.map(i => Widget.Button({
            onClicked: () => execAsync(`hyprctl dispatch workspace ${i}`),
            child: Widget.Label(`${i}`),
            className: Hyprland.active.workspace.id == i ? 'focused' : '',
        }));
    }]],
});
